{
	"info": {
		"_postman_id": "10d1f123-a51c-4cb9-a51a-781b192c58b5",
		"name": "Courses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetAllCourses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all courses\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.collectionVariables.set(\"currentCase\", \"wrongCourseIdFormat\");",
							"    postman.setNextRequest(\"GetCourseDetails\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/courses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetCourseDetails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const currentCase = pm.collectionVariables.get(\"currentCase\");",
							"switch(currentCase) {",
							"    case \"wrongCourseIdFormat\":",
							"        pm.test(\"Wrong course id format\", function (){",
							"            pm.response.to.have.status(400);",
							"            pm.collectionVariables.set(\"currentCase\", \"courseNotPresent\");",
							"            postman.setNextRequest(\"GetCourseDetails\");",
							"        });",
							"        break;",
							"    case \"courseNotPresent\":",
							"        pm.test(\"Course not found\", function(){",
							"            pm.response.to.have.status(404);",
							"            pm.collectionVariables.set(\"currentCase\", \"correctRequest\");",
							"            postman.setNextRequest(\"GetCourseDetails\");",
							"        });",
							"        break;",
							"    case \"correctRequest\":",
							"        pm.test(\"Correct request\", function(){",
							"            pm.response.to.have.status(200);",
							"            postman.setNextRequest(null);",
							"        });",
							"        break;",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const currentCase = pm.collectionVariables.get(\"currentCase\");",
							"switch(currentCase){",
							"    case \"wrongCourseIdFormat\":",
							"        console.log(\"Generating a request wrong course Id format...\");",
							"        pm.collectionVariables.set(\"courseId\", pm.variables.replaceIn(\"{{$randomWord}}\"));",
							"        break;",
							"    case \"courseNotPresent\":",
							"        console.log(\"Generating a request with course id for which course id not created...\");",
							"        console.log(\"Registering as an instructor\");",
							"        pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
							"        pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
							"        pm.sendRequest({",
							"            url: pm.collectionVariables.get(\"instructorRegistrationUrl\"),",
							"            method: 'POST',",
							"            header: {",
							"                'content-type': 'application/json'",
							"            },",
							"            body: {",
							"                mode: 'raw',",
							"                raw: JSON.stringify({",
							"                    email: pm.collectionVariables.get(\"email\"),",
							"                    password: pm.collectionVariables.get(\"password\")",
							"                })",
							"            }",
							"        }, function (err, res) {",
							"            console.log(\"Logging in as the same instructor\");",
							"            pm.sendRequest({",
							"                url: pm.collectionVariables.get(\"instructorLoginUrl\"),",
							"                method: 'POST',",
							"                header: {",
							"                    'content-type': 'application/json'",
							"                },",
							"                body: {",
							"                    mode: 'raw',",
							"                    raw: JSON.stringify({",
							"                        email: pm.collectionVariables.get(\"email\"),",
							"                        password: pm.collectionVariables.get(\"password\")",
							"                    })",
							"                }",
							"            }, function(err, res) {",
							"                pm.collectionVariables.set(\"token\", res.json()[\"token\"]);",
							"                console.log(\"creating a course\");",
							"                pm.collectionVariables.set(\"title\", pm.variables.replaceIn(\"{{$randomCatchPhrase}}\"));",
							"                pm.sendRequest({",
							"                    url: pm.collectionVariables.get(\"courseCreationUrl\"),",
							"                    method: 'POST',",
							"                    header: {",
							"                        'content-type': 'application/json',",
							"                        'Authorization': 'Bearer ' + pm.collectionVariables.get('token')",
							"                    },",
							"                    body: {",
							"                        mode: 'raw',",
							"                        raw: JSON.stringify({",
							"                            title: pm.collectionVariables.get(\"title\")",
							"                        })",
							"                    }",
							"                }, function(err, res) {",
							"                    pm.collectionVariables.set(\"registeredCourseId\", res.json()[\"ID\"]);",
							"                    pm.collectionVariables.set(\"courseId\", pm.collectionVariables.get(\"registeredCourseId\") + 1);",
							"                })",
							"            })",
							"        });",
							"        break;",
							"    case \"correctRequest\":",
							"        console.log(\"Generating the correct request...\");",
							"        pm.collectionVariables.set(\"courseId\", pm.collectionVariables.get(\"registeredCourseId\"));",
							"        break;",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/course/:courseId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"course",
						":courseId"
					],
					"variable": [
						{
							"key": "courseId",
							"value": "{{courseId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		},
		{
			"key": "currentCase",
			"value": "",
			"type": "string"
		},
		{
			"key": "courseId",
			"value": "",
			"type": "string"
		},
		{
			"key": "instructorRegistrationUrl",
			"value": "http://localhost:8080/api/instructor/register",
			"type": "string"
		},
		{
			"key": "instructorLoginUrl",
			"value": "http://localhost:8080/api/instructor/login",
			"type": "string"
		},
		{
			"key": "courseCreationUrl",
			"value": "http://localhost:8080/api/instructor/course",
			"type": "string"
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "title",
			"value": "",
			"type": "string"
		},
		{
			"key": "registeredCourseId",
			"value": "",
			"type": "string"
		}
	]
}